 software engineering cs301 course description objectives course focus concept software life cycle role process model method prepare software requirement specification document addition also impart knowledge design development testing software objective course enable student develop efficient cost effective feasible software per user requirement course outcomes student able define appropriate process model ensure development delivery project within initial budget schedule estimate prepare software requirement specification sr document software project analyze understand complex problem use analysis model distinguish objectoriented approach traditional approach system design design project solution use uml diagram like use case sequence diagram etc prepare right software architecture meet quality constraint design many test case possible ensure bug free software apply various metric measure software product size complexity effort budget etc identify possible risk project development develop risk mitigation step skill define process developingcompleting different kind project time expect quality understand software requirement find various way gather specify analyze model diagrammaticalrepresentations software product design effective userfriendly interface give software product find fix bug software product unit1 introduction software engineering evolve role software software change nature software software myth generic view process software engineering layered technology process framework software development life cycle sdlc capability maturity model integration cmmi process assessment process model waterfall model incremental process model evolutionary process model spiral prototype model unit2 agile view process agile process model unified process extreme program scrum requirement engineering inception elicitation elaboration negotiation specification sr document ieee standard srs validation requirement management feasibility study build analysis model data model data object attribute relationship cardinality modality class base model identify analysis class specify attribute define operation unit3 design engineering design concepts design model create architectural design software architecture data design architectural style pattern architectural design perform user interface design golden rule user interface analysis design interface analysis interface design step design evaluation unit4 product metric software quality metric analysis model metric design model architecture metric object orient metric metric source code metric test metric maintenance test strategy strategic approach software test test strategy conventional software validation test system test test tactic blackbox whitebox test unit5 risk management reactive v proactive risk strategy software risk risk identification risk projection risk refinement rmmm rmmm plan quality mangement quality concept software quality assurance software review formal technical review statistical software quality assurance software reliability iso 9000 quality standard