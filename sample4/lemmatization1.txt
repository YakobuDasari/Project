software engineering cs301 course description and objectives this course focus on the concept of software life cycle role of process model and method to prepare software requirement specification document in addition to that it also impart knowledge of design development and testing of software the objective of this course be to enable the student to develop efficient cost effective feasible software a per user requirement course outcomes the student will be able to define appropriate process model that ensure development and delivery of the project within initial budget and schedule estimate prepare a software requirement specification sr document for any software project analyze and understand the complex problem use analysis model distinguish between objectoriented approach and traditional approach in system design design the project solution use uml diagram like use case sequence diagram etc prepare a right software architecture that meet all quality constraint design a many test case a possible to ensure bug free software apply various metric to measure software product size complexity effort budget etc identify the possible risk in project development and develop risk mitigation step skill define a process for developingcompleting different kind of project on time with expect quality understand the software requirement and find out various way to gather them and specify them analyze and model diagrammaticalrepresentations a software product design an effective userfriendly interface for a give software product find and fix the bug in a software product unit1 introduction to software engineering the evolve role of software software change nature of software software myth generic view of process software engineering a layered technology a process framework software development life cycle sdlc the capability maturity model integration cmmi process assessment process model the waterfall model incremental process model evolutionary process model spiral and prototype model unit2 an agile view of process agile process model the unified process extreme program scrum requirement engineering inception elicitation elaboration negotiation specification sr document ieee standard for srs validation requirement management feasibility study build the analysis model data model data object attribute relationship cardinality and modality class base model identify analysis class specify attribute and define operation unit3 design engineering design concepts the design model create an architectural design software architecture data design architectural style and pattern architectural design perform user interface design golden rule user interface analysis and design interface analysis interface design step design evaluation unit4 product metric software quality metric for analysis model metric for design model architecture metric and object orient metric metric for source code metric for test metric for maintenance test strategy a strategic approach to software test test strategy for conventional software validation test system test test tactic blackbox and whitebox test unit5 risk management reactive v proactive risk strategy software risk risk identification risk projection risk refinement rmmm rmmm plan quality mangement quality concept software quality assurance software review formal technical review statistical software quality assurance software reliability the iso 9000 quality standard